# Generated by Django 3.2.9 on 2025-02-21 15:48

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=32)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '班级',
                'verbose_name_plural': '班级',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/faces/')),
                ('data', models.TextField(blank=True, null=True)),
                ('username', models.CharField(db_index=True, max_length=32)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '人脸数据',
                'verbose_name_plural': '人脸数据',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=32)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.classes')),
            ],
            options={
                'verbose_name': '课程',
                'verbose_name_plural': '课程',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CheckLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=32)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('check_time', models.FloatField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/check/')),
                ('status', models.CharField(choices=[('正常签到', '正常签到'), ('迟到', '迟到'), ('缺勤', '缺勤'), ('请假', '请假'), ('补签', '补签')], default='正常签到', max_length=32)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course')),
            ],
            options={
                'verbose_name': '签到记录',
                'verbose_name_plural': '签到记录',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=32)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('option', models.CharField(choices=[('补签', '补签'), ('请假', '请假')], default='补签', max_length=32)),
                ('data', models.TextField(blank=True, null=True)),
                ('result', models.TextField(blank=True, null=True)),
                ('option_username', models.CharField(db_index=True, max_length=32)),
                ('edit_time', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('待审批', '待审批'), ('已通过', '已通过'), ('已拒绝', '已拒绝')], default='待审批', max_length=32)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course')),
            ],
            options={
                'verbose_name': '审批记录',
                'verbose_name_plural': '审批记录',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, default='images/faces/1.jpg', null=True, upload_to='images/avatar/')),
                ('type', models.CharField(choices=[('user', '学生'), ('teacher', '教师'), ('superuser', '超级管理员')], default='user', max_length=32)),
                ('classes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.classes')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用戶',
                'verbose_name_plural': '用戶',
                'ordering': ['-id'],
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
